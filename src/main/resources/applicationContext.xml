<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:task="http://www.springframework.org/schema/task" 
    xmlns:p="http://www.springframework.org/schema/p"
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
	http://www.springframework.org/schema/context  
	http://www.springframework.org/schema/context/spring-context-3.0.xsd  
	http://www.springframework.org/schema/aop  
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
	http://www.springframework.org/schema/tx  
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
	http://www.springframework.org/schema/task   
	http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<context:component-scan base-package="com.asdc.lrm.jersey"></context:component-scan>
	
	<bean id="placeholderConfig"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
			<value>classpath:config.properties</value>
			<value>classpath:redis.properties</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName">
			<value>${dataSource.driverClassName}</value>
		</property>
		<property name="url">
			<value>${dataSource.url}</value>
		</property>
		<property name="username">
			<value>${dataSource.username}</value>
		</property>
		<property name="password">
			<value>${dataSource.password}</value>
		</property>
		<property name="initialSize">
			<value>${dataSource.initialSize}</value>
		</property>
		<property name="maxActive">
			<value>${dataSource.maxActive}</value>
		</property>
        <property name="minIdle">
        	<value>${dataSource.minIdle}</value>
        </property>
        <property name="maxIdle">
        	<value>${dataSource.maxIdle}</value>
        </property>
        <property name="maxWait">
        	<value>${dataSource.maxWait}</value>
        </property>
        <property name="removeAbandoned">
        	<value>${dataSource.removeAbandoned}</value>
        </property>  
        <property name="removeAbandonedTimeout">
        	<value>${dataSource.removeAbandonedTimeout}</value>
        </property>
        <property name="validationQuery">
			<value>select * from lrm_menuinfo</value>
		</property>
	</bean>

	<bean id="nativeJdbcExtractor"
		class="org.springframework.jdbc.support.nativejdbc.SimpleNativeJdbcExtractor">
	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
		
		<property name="configLocations">
			<list>
				<value>classpath:hibernate.cfg.xml</value>
			</list>
		</property>
	</bean>
	<bean
        id="jedisPoolConfig"
        class="redis.clients.jedis.JedisPoolConfig" >

        <property
            name="maxActive"
            value="${redis.pool.maxActive}" />

        <property
            name="maxIdle"
            value="${redis.pool.maxIdle}" />

        <property
            name="maxWait"
            value="${redis.pool.maxWait}" />

        <property
            name="testOnBorrow"
            value="${redis.pool.testOnBorrow}" />
    </bean>

    <bean
        id="jedisConnectionFactory"
        class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" >

        <property
            name="hostName"
            value="${redis.ip}" />

        <property
            name="port"
            value="${redis.port}" />

        <property
            name="poolConfig"
            ref="jedisPoolConfig" />
    </bean>

    <bean
        id="redisTemplate"
        class="org.springframework.data.redis.core.RedisTemplate"
        p:connection-factory-ref="jedisConnectionFactory" />

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

	<bean id="txProxyTemplate" abstract="true"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="search*">readOnly</prop>
				<prop key="get*">readOnly</prop>
				<prop key="load*">readOnly</prop>
				<prop key="find*">readOnly</prop>
				<prop key="add*">PROPAGATION_REQUIRED</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="insert*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="remove*">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<bean id="transactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref local="transactionManager" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	
	<!-- 线程执行器配置 -->
	<bean id="executor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="10"></property>
		<property name="maxPoolSize" value="100"></property>
		<property name="queueCapacity" value="50"></property>
	</bean>
	
	<!-- 业务类 -->
	<bean id="taskJob" class="com.asdc.lrm.task.TaskJob" autowire="byName"></bean>
	
	<!-- 任务配置 -->
	<bean id="jobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="taskJob"></property>
		<property name="targetMethod" value="createPDF"></property>
	</bean>
	
	<!-- 触发器配置 -->
	<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="jobDetail"></property>
		<property name="cronExpression"><value>${task.cronExpression}</value></property>
	</bean>
	
	<!-- 查看页面 缓存 定时配置 -->
	<bean id="showAllReportsForCacheTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="showAllReportsForCache"/>
 		<property name="cronExpression" value="0 0 2 * * ?"/> 
   	</bean>
   	
   	<bean id="showAllReportsForCache" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    	<property name="targetObject" ref="showAllReportsCache"/>
        <property name="targetMethod" value="showAllReportsForCache"/>
        <property name="concurrent" value="false"/>
    </bean>
    
   	<bean id="showAllReportsCache" class="com.asdc.lrm.action.ReportBasicAction">
    </bean>
	<!-- 查看页面 缓存 定时配置 -->
	
	<!-- 调度设置 -->
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTrigger"/>
				<ref bean="showAllReportsForCacheTrigger"/>
			</list>
		</property>
		<property name="taskExecutor" ref="executor"></property>
	</bean>
	
</beans>